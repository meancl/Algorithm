// 이 문제는 이진탐색트리( 왼편이 더 작은값, 오른쪽이 더 큰 값을 가진 ) 형태로 입력이 주어져 있을 때 
// 그 노드들 간 가장 작은 값을 가진 차이값의 절댓값을 구하는 문제이다.
// 이 문제에서 짚고 넘어가야하는 키포인트는
// 이진탐색트리에서 inorder (left-> self -> right) 순으로 탐색을 하게 되면
// 오름차순의 방향을 가지게 된다.



class Solution {
public:
    
    int i_minVal =INT_MAX;
    bool b_first=true;
    int i_prevVal;
    
    int getMinimumDifference(TreeNode* root) {
       Traverse(root);    
       return i_minVal;
    }
    
void Traverse(TreeNode* curNode)
{

    if(curNode->left != NULL)
        Traverse(curNode->left);
// 가장 작은 값을 가진(맨 왼쪽에 있는 ) 노드부터 시작     
    if(b_first)
    {
        b_first =false;
    }else // 그 다음부터는 바로 전에 있는( 1칸 더 작은 ) 값과의 차이와 min_val와 비교
    {
        i_minVal= min(i_minVal, curNode->val - i_prevVal);
    }
    i_prevVal = curNode->val;
    
    if(curNode->right != NULL)
        Traverse(curNode->right);
  
}



};
